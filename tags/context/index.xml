<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>context on Lroolle</title>
    <link>http://lroolle.com/tags/context/</link>
    <description>Recent content in context on Lroolle</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 15 Aug 2020 00:00:00 +0800</lastBuildDate>
    
	<atom:link href="http://lroolle.com/tags/context/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Go Concurrency Patterns Context</title>
      <link>http://lroolle.com/notes/go-concurrency-patterns-context/</link>
      <pubDate>Sat, 15 Aug 2020 00:00:00 +0800</pubDate>
      
      <guid>http://lroolle.com/notes/go-concurrency-patterns-context/</guid>
      <description>Original Post:
 -&amp;gt; Go Concurrency Patterns: Context - The Go Blog
 Context src:
 -&amp;gt; context - The Go Programming Language
 Go Concurrency Patterns Context  context package makes it easy to pass request-scoped values, cancelation signals, and deadlines across API boundaries to all the goroutines involved in handling a request
 Context The core of the context package is the Context type:
// A Context carries a deadline, cancelation signal, and request-scoped values // across API boundaries.</description>
    </item>
    
  </channel>
</rss>